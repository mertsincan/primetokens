"use strict";var U=Object.create;var f=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames,l=Object.getOwnPropertySymbols,w=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var y=(e,t,o)=>t in e?f(e,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):e[t]=o,k=(e,t)=>{for(var o in t||(t={}))h.call(t,o)&&y(e,o,t[o]);if(l)for(var o of l(t))x.call(t,o)&&y(e,o,t[o]);return e};var E=(e,t,o,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of v(t))!h.call(e,n)&&n!==o&&f(e,n,{get:()=>t[n],enumerable:!(s=_(t,n))||s.enumerable});return e};var d=(e,t,o)=>(o=e!=null?U(w(e)):{},E(t||!e||!e.__esModule?f(o,"default",{value:e,enumerable:!0}):o,e));var S=(e,t,o)=>new Promise((s,n)=>{var m=i=>{try{g(o.next(i))}catch(p){n(p)}},a=i=>{try{g(o.throw(i))}catch(p){n(p)}},g=i=>i.done?s(i.value):Promise.resolve(i.value).then(m,a);g((o=o.apply(e,t)).next())});var c=d(require("@actions/core"),1),u=d(require("fs"),1),I=d(require("path"),1);var P=require("child_process");function r(e,t){try{(0,P.execSync)(e,{stdio:"inherit"})}catch(o){t==null||t(o)}}function T(){return S(this,null,function*(){try{let e=c.default.getInput("TOKENS_PATH"),t=c.default.getInput("PUBLIC_KEY"),o=c.default.getInput("OUTPUT_DIR");if(!t){c.default.setFailed("Required inputs are missing: PUBLIC_KEY");return}let s=u.default.readFileSync(e,"utf-8"),n=JSON.parse(s),m=k({publicKey:t},n);u.default.existsSync(o)||u.default.mkdirSync(o,{recursive:!0});let a=I.default.resolve(o,"generated_tokens.json");u.default.writeFileSync(a,JSON.stringify(m,null,2),"utf-8"),console.log("Theme tokens generated successfully!"),r('git config user.name "Github Actions Bot"'),r('git config user.email "<>"'),r("git add ."),r('git commit -m "Update Prime Tokens"',()=>{console.log("No changes to commit")}),r("git push")}catch(e){c.default.setFailed(e.message)}})}T();
//# sourceMappingURL=index.js.map