var k=Object.defineProperty;var f=Object.getOwnPropertySymbols;var S=Object.prototype.hasOwnProperty,P=Object.prototype.propertyIsEnumerable;var d=(e,o,t)=>o in e?k(e,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[o]=t,l=(e,o)=>{for(var t in o||(o={}))S.call(o,t)&&d(e,t,o[t]);if(f)for(var t of f(o))P.call(o,t)&&d(e,t,o[t]);return e};var y=(e,o,t)=>new Promise((u,r)=>{var m=n=>{try{g(t.next(n))}catch(p){r(p)}},a=n=>{try{g(t.throw(n))}catch(p){r(p)}},g=n=>n.done?u(n.value):Promise.resolve(n.value).then(m,a);g((t=t.apply(e,o)).next())});import s from"@actions/core";import c from"fs";import T from"path";import{execSync as I}from"child_process";function i(e,o){try{I(e,{stdio:"inherit"})}catch(t){o==null||o(t)}}function h(){return y(this,null,function*(){try{let e=s.getInput("TOKENS_PATH"),o=s.getInput("PUBLIC_KEY"),t=s.getInput("OUTPUT_DIR");if(!o){s.setFailed("Required inputs are missing: PUBLIC_KEY");return}let u=c.readFileSync(e,"utf-8"),r=JSON.parse(u),m=l({publicKey:o},r);c.existsSync(t)||c.mkdirSync(t,{recursive:!0});let a=T.resolve(t,"generated_tokens.json");c.writeFileSync(a,JSON.stringify(m,null,2),"utf-8"),console.log("Theme tokens generated successfully!"),i('git config user.name "Github Actions Bot"'),i('git config user.email "<>"'),i("git add ."),i('git commit -m "Update Prime Tokens"',()=>{console.log("No changes to commit")}),i("git push")}catch(e){s.setFailed(e.message)}})}h();
//# sourceMappingURL=index.js.map